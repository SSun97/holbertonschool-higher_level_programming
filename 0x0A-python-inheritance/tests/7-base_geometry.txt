The ``7-base_geometry`` module
============================

Using `BaseGeometry``
---------------------

Import function from module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test two arguments:

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    

Test value not an integer

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

Test value = 0

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

Test value < 0

    >>> bg.integer_validator("age", -2)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

Test area()
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

Test integer_validator()

    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test integer_validator(age)

    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Test integer_validator(age)

    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Test integer_validator(age)

    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Test integer_validator(age)

    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Test integer_validator(age)

    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Test integer_validator(age)

    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer















